/*      Решение всех задач данного раздела предполагает использование кучи, реализованной в виде класса.
 *      4_4. Скользящий максимум.
 *      Дан массив натуральных чисел A[0..n), n не превосходит 10^8. Так же задан размер некоторого окна
 *      (последовательно расположенных элементов массива) в этом массиве k, k<=n. Требуется для каждого
 *      положения окна (от 0 и до n-k) вывести значение максимума в окне.
 *      Скорость работы O(n log n), память O(n).
 *      Формат входных данных. Вначале вводится n - количество элементов массива. Затем вводится n строк
 *      со значением каждого элемента. Затем вводится k  - размер окна.
 *      Формат выходных данных. Разделенные пробелом значения максимумов для каждого положения окна.
 * */

#include <iostream>

class Heap {
public:
    void SiftDown ( const int * a, int n );
    void SiftUp ( int& a, int n );
    void BuildHead ( int& a);
private:
    int *arr;
    int size;
};

void Heap::SiftDown(const int *a, int n) {
    int left = 2 * n +1;
    int right = 2 * n + 2;
    int larger = n;

    if ( left < a.size && )

}

int main() {
    std::cout << "Hello, World!" << std::endl;
    return 0;
}